'''
Рекуррентные сортировки

1) Быстрая сортировка Тони Хора
На средней случайной выборке сортировка происходит за W(NlogN)
Выполняет сортирующее действие на прямом ходу
Не требует выделения дополнительной памяти
Относится к группе алгоритмов "Разделяй и властвуй"

A = [4, 2, 6, 3, 1, 4, 5]
выбираем "барьерный элемент"
остальные могут быть: меньше, больше или равны "барьерному"
проходим массив и формируем три "кучки или массива"
сразу плюс: тех кто равны сортировать не надо

промежуточный итог есть. осталось отсортировать два подмножества
они более простые - количество элементов уменьшилось 


2) Сортировка слиянием или быстрая сортировка
На любых входных данных позволяет получить результат за О(NlogN)
Выполняет сортирующее действие на обратном ходу
Требует выделения дополнительной памяти такого же объем 
как и размер входных значений

Сортировка называется устойчивой
если она не меняет порядок элементов

A = [4, 2, 6, 3, 1, 4, 5]

прапор-мечтатель

разделить массив // 2 (не вкл)
и отсортировать два массива: 
[0, N//2) и [N//2, N) по отдельности

подчиненные как-то сортируют, мы пока не вдумываемся

проходим по каждому подмассиву поэлементно
ставим их каждый в начало каждого подмассива
дальше проверяем каждый елемент
передвигая индексы
проверяем относим 
'''

